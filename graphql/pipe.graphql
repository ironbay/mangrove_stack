type Query {
  pipe: Pipe!
}

type Pipe {
  name: String!
  flags: Flags!
  sources: [Source!]!
  destinations: [Destination!]!
}

type Source {
  account: SourceAccount!
  filters: [Filter!]!
}

union SourceAccount = PlaidAccount

union Destination = SlackDestination

type SlackDestination {
  team: SlackTeam!
  channel: SlackChannel!
}

interface Filter {
  id: ID!
  kind: String!
  op: String!
}

type NumberFilter implements Filter {
  id: ID!
  kind: String!
  op: String!
  int: Int!
}

type StringFilter implements Filter {
  id: ID!
  kind: String!
  op: String!
  word: String!
}

type Flags {
  enabled: Boolean!
}
