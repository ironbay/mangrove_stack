type User {
  connections: [Connection!]!
}

type Query {
  connection(id: ID!): Connection!
  plaid_link(user: ID!): PlaidLink!
  slack_link(user: ID!): SlackLink!
}

type Mutation {
  removeConnection(input: String!): Connection!
}

union Connection =
    PlaidConnection
  | BitcoinConnection
  | SlackConnection
  | TwilioConnection

type PlaidLink {
  link: String!
}

type SlackLink {
  link: String!
}

interface Connection {
  id: ID!
  logo: String!
  pipes: [Pipe!]!
}

type PlaidConnection implements Connection {
  id: ID!
  accounts: [PlaidAccount!]!
  logo: String!
  name: String!
  pipes: [Pipe!]!
}

type PlaidAccount {
  id: ID!
  name: String!
  kind: String!
  category: String!
  subCategory: String!
  connection: PlaidConnection!
}

type BitcoinConnection implements Connection {
  id: ID!
  account: BitcoinAccount!
  logo: String!
  name: String!
  pipes: [Pipe!]!
}

type BitcoinAccount {
  id: ID!
  address: String!
  kind: String!
  connection: BitcoinConnection!
}

type SlackConnection implements Connection {
  id: ID!
  team: SlackTeam!
  channels: [SlackChannel!]!
  logo: String!
  name: String!
  pipes: [Pipe!]!
}

type SlackTeam {
  id: ID!
  name: String!
  logo: String!
}

type SlackChannel {
  id: ID!
  name: String!
  topic: String!
  count_members: Int!
  connection: SlackConnection!
}

type TwilioConnection implements Connection {
  id: ID!
  phone: TwilioPhone!
  logo: String!
  name: String!
  pipes: [Pipe!]!
}

type TwilioPhone {
  raw: String!
  format: String!
}
